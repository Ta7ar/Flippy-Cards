{"version":3,"sources":["components/Navbar.js","components/Spinner.js","components/LoginForm.js","components/SignupForm.js","components/Card.js","components/CardsView.js","components/DeckTile.js","components/Home.js","components/ProtectedRoute.js","components/Modal.js","components/CardRow.js","components/DeckCreator.js","App.js","index.js"],"names":["Navbar","toggleTheme","isLoggedIn","toggleLoggedIn","className","to","onClick","localStorage","removeItem","Spinner","axios","require","default","LoginForm","useState","name","setUsername","password","setPassword","message","setMessage","loading","setLoading","type","onChange","e","target","value","preventDefault","post","then","res","setItem","data","window","location","href","catch","err","response","style","textAlign","padding","SignupForm","confirmedPassword","setConfirmedPassword","placeholder","Card","children","question","answer","flipped","toggleFlip","CardsView","cards","toggle","currentIndex","setCurrentIndex","length","DeckTile","getDecks","_id","popover","togglePopover","cardView","toggleCardView","display","position","stopPropagation","jwt_token","getItem","headers","Home","decks","setDecks","get","useEffect","map","deck","ProtectedRoute","path","accessible","exact","Modal","isOpen","CardRow","card","index","deleteCard","width","height","margin","backgroundColor","DeckCreator","state","currentCard","AddCardModal","CreateDeckModal","deckName","handleCardOps","field","setState","trim","addCard","document","getElementById","toggleAddCardModal","toggleCreateDeckModal","deckCopy","filter","i","createDeck","this","id","val","marginTop","Component","App","isDark","JSON","stringify","bool","componentWillMount","theme","parse","jwt","render","pathname","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3efc8526.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar({ toggleTheme, isLoggedIn, toggleLoggedIn }) {\r\n  const handleLogout = () => {\r\n    //delete json webtoken from local storage\r\n    localStorage.removeItem(\"auth-token\");\r\n    toggleLoggedIn(false);\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div>\r\n          <Link to=\"/\">Home</Link>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/createdeck\">\r\n            Create Deck\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/login\" onClick={handleLogout}>\r\n            Logout\r\n          </Link>\r\n        </div>\r\n        <div onClick={toggleTheme}>\r\n          <i className=\"far fa-moon\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div>\r\n        <Link to=\"/\">Home</Link>\r\n      </div>\r\n\r\n      <div>\r\n        <Link to=\"/signup\">Signup</Link>\r\n      </div>\r\n\r\n      <div>\r\n        <Link to=\"/login\">Login</Link>\r\n      </div>\r\n\r\n      <div onClick={toggleTheme}>\r\n        <i className=\"far fa-moon\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport Spinner from \"./Spinner\";\r\nconst axios = require(\"axios\").default;\r\n\r\nfunction LoginForm() {\r\n  const [name, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    axios\r\n      .post(\"/api/user/login\", {\r\n        name,\r\n        password,\r\n      })\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setMessage(\"Logged in\");\r\n        //store the jwt in res.data in local storage\r\n        localStorage.setItem(\"auth-token\", res.data);\r\n        //redirect to home page\r\n        window.location.href = \"/\";\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setMessage(err.response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form login\">\r\n        <form>\r\n          <label>\r\n            Username:\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n              }}\r\n            ></input>\r\n          </label>\r\n\r\n          <label>\r\n            Password:\r\n            <br />\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            ></input>\r\n          </label>\r\n          <div>\r\n            <button onClick={handleLogin}>Log in</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {message && (\r\n        <p style={{ textAlign: \"center\", padding: \"1rem\" }}>{message}</p>\r\n      )}\r\n      {loading && <Spinner></Spinner>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\r\nimport Spinner from \"./Spinner\";\r\nconst axios = require(\"axios\").default;\r\n\r\nfunction SignupForm() {\r\n  const [name, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmedPassword, setConfirmedPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const registerUser = (e) => {\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    if (password !== confirmedPassword) {\r\n      setLoading(false);\r\n      return setMessage(\"Passwords do not match\");\r\n    }\r\n    axios\r\n      .post(\"/api/user/register\", {\r\n        name,\r\n        password,\r\n      })\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setMessage(res.data);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setMessage(err.response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form signup\">\r\n        <form>\r\n          <label>\r\n            Username:\r\n            <br />\r\n            <input\r\n              placeholder=\"Minimum 3 Characters\"\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n              }}\r\n            ></input>\r\n          </label>\r\n          <label>\r\n            Password:\r\n            <br />\r\n            <input\r\n              placeholder=\"Minimum 6 Characters\"\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            ></input>\r\n          </label>\r\n          <label>\r\n            Confirm Password:\r\n            <br />\r\n            <input\r\n              placeholder=\"Minimum 6 Characters\"\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setConfirmedPassword(e.target.value);\r\n              }}\r\n            ></input>\r\n          </label>\r\n          <div>\r\n            <button onClick={registerUser}>Sign up</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {message && (\r\n        <p style={{ textAlign: \"center\", padding: \"1rem\" }}>{message}</p>\r\n      )}\r\n      {loading && <Spinner></Spinner>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupForm;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Card({ children: { question, answer } }) {\r\n  const [flipped, toggleFlip] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className={`card ${flipped ? \"flip\" : \"\"}`}\r\n      onClick={() => {\r\n        toggleFlip(!flipped);\r\n      }}\r\n    >\r\n      <div className=\"front\">\r\n        <h4>{question}</h4>\r\n      </div>\r\n      <div className=\"back\">\r\n        <h4>{answer}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nfunction CardsView({ children: cards, toggle }) {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const nextCard = () => {\r\n    if (currentIndex !== cards.length - 1) {\r\n      setCurrentIndex(currentIndex + 1);\r\n    }\r\n  };\r\n\r\n  const previousCard = () => {\r\n      if (currentIndex !== 0){\r\n          setCurrentIndex(currentIndex-1);\r\n      }\r\n  }\r\n  return (\r\n    <div className=\"cards-view\">\r\n      <button\r\n        onClick={() => {\r\n          toggle(false);\r\n        }}\r\n      >\r\n        &#10006;\r\n      </button>\r\n      <div className=\"chevron left\" onClick={previousCard}>\r\n        &#x2039;\r\n      </div>\r\n      <Card>{cards[currentIndex]}</Card>\r\n      <div className=\"chevron right\" onClick={nextCard}>\r\n        &#x203A;\r\n      </div>\r\n      <div className=\"current-card\">{currentIndex + 1}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardsView;\r\n","import React, { useState } from \"react\";\r\nimport CardsView from \"./CardsView\";\r\nconst axios = require(\"axios\").default;\r\n\r\nfunction DeckTile({ children, getDecks }) {\r\n  const { name, cards, _id } = children;\r\n  const [popover, togglePopover] = useState(false);\r\n  const [cardView, toggleCardView] = useState(false);\r\n\r\n  const deleteDeck = (e) => {\r\n    e.stopPropagation();\r\n    togglePopover(!popover);\r\n  };\r\n\r\n  const deleteDeckConfirmed = (e) => {\r\n    e.stopPropagation();\r\n    const jwt_token = localStorage.getItem(\"auth-token\");\r\n    axios\r\n      .post(\r\n        \"api/deletedeck\",\r\n        { _id },\r\n        {\r\n          headers: { \"auth-token\": jwt_token },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        getDecks();\r\n      })\r\n      .catch((err) => {\r\n        if (err) throw err;\r\n      });\r\n    togglePopover(false);\r\n  };\r\n\r\n  if (cardView) return <CardsView  toggle={toggleCardView}>{cards}</CardsView>;\r\n  return (\r\n    <div\r\n      className=\"deck-tile-container\"\r\n      style={{ display: \"inline-block\", position: \"relative\" }}\r\n    >\r\n      <div onClick={()=>{toggleCardView(true)}} className=\"deck-tile\">\r\n        <p>{name}</p>\r\n        <button onClick={deleteDeck}>&#10006;</button>\r\n      </div>\r\n      {popover && (\r\n        <button className=\"popover\" onClick={deleteDeckConfirmed}>\r\n          Delete Deck\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckTile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport DeckTile from \"./DeckTile\";\r\nimport Spinner from \"./Spinner\";\r\nconst axios = require(\"axios\").default;\r\n\r\nfunction Home({ isLoggedIn }) {\r\n  const [decks, setDecks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getDecks = () => {\r\n    const jwt_token = localStorage.getItem(\"auth-token\");\r\n    axios\r\n      .get(\"/api/decks\", {\r\n        headers: { \"auth-token\": jwt_token },\r\n      })\r\n      .then((res) => {\r\n        setDecks(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        if (err) throw err;\r\n      });\r\n  };\r\n  useEffect(getDecks, []);\r\n  if (!isLoggedIn) {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          {{\r\n            question: \"Click Me to get started!\",\r\n            answer:\r\n              \"Create an account, log in, make your deck of cards and use them!\",\r\n          }}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"home\" style={{ padding: \"1rem\" }}>\r\n      {loading && <Spinner />}\r\n      {decks.map((deck) => {\r\n        return <DeckTile getDecks={getDecks}>{deck}</DeckTile>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction ProtectedRoute({ children, path, accessible }) {\r\n  if (accessible) {\r\n    return (\r\n      <Route path={path} exact>\r\n        {children}\r\n      </Route>\r\n    );\r\n  }\r\n  return (\r\n    <Route path={path} exact>\r\n      <Redirect to=\"/\" />\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\n\r\nfunction Modal({ isOpen, toggle,children }) {\r\n  if (isOpen) {\r\n    return (\r\n      <div className=\"modal-canvas\" onClick={toggle}>\r\n        <div className=\"modal-body\" onClick={(e)=>{e.stopPropagation()}}>\r\n          {children}\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nfunction CardRow({ card, index, deleteCard }) {\r\n  const { question, answer } = card;\r\n  return (\r\n    <div style={{ padding: \"1rem\" }}>\r\n      Question: {question}, Answer: {answer}\r\n      <button\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          deleteCard(index);\r\n        }}\r\n        style={{\r\n          width: \"2rem\",\r\n          height: \"2rem\",\r\n          margin: \"1rem\",\r\n          backgroundColor: \"#F40000\",\r\n        }}\r\n      >\r\n        &#10006;\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardRow;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport CardRow from \"./CardRow\";\r\nconst axios = require(\"axios\").default;\r\n\r\nclass DeckCreator extends Component {\r\n  state = {\r\n    message: \"\",\r\n    deck: [],\r\n    currentCard: { question: \"\", answer: \"\" },\r\n    AddCardModal: false,\r\n    CreateDeckModal: false,\r\n    deckName: \"\",\r\n  };\r\n  handleCardOps = (e, field) => {\r\n    this.setState({\r\n      currentCard: {\r\n        ...this.state.currentCard,\r\n        [field]: e.target.value.trim(),\r\n      },\r\n    });\r\n  };\r\n\r\n  addCard = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      !this.state.currentCard.question.trim() ||\r\n      !this.state.currentCard.answer.trim()\r\n    )\r\n      return this.setState({ message: \"Fields Cannot be Empty\" });\r\n\r\n    document.getElementById(\"question\").value = \"\";\r\n    document.getElementById(\"answer\").value = \"\";\r\n    this.setState({\r\n      deck: [...this.state.deck, this.state.currentCard],\r\n      currentCard: { question: \"\", answer: \"\" },\r\n      message: \"\",\r\n    });\r\n  };\r\n\r\n  toggleAddCardModal = () => {\r\n    this.setState({ AddCardModal: !this.state.AddCardModal });\r\n  };\r\n  toggleCreateDeckModal = () => {\r\n    if (this.state.deck.length === 0)\r\n      return this.setState({ message: \"Cannot create deck with no cards\" });\r\n    this.setState({ message: \"\" });\r\n    this.setState({ CreateDeckModal: !this.state.CreateDeckModal });\r\n  };\r\n\r\n  deleteCard = (index) => {\r\n    var deckCopy = [...this.state.deck];\r\n    deckCopy = deckCopy.filter((value, i) => {\r\n      return i !== index;\r\n    });\r\n    this.setState({ deck: deckCopy }, () => {\r\n      if (deckCopy.length === 0) return this.toggleAddCardModal();\r\n    });\r\n  };\r\n\r\n  createDeck = () => {\r\n    if (this.state.deckName.trim() === \"\")\r\n      return this.setState({ message: \"Name your deck\" });\r\n    if (this.state.deck.length === 0)\r\n      return this.setState({ message: \"Cannot create a deck with no cards\" });\r\n    if (this.state.deckName.trim().length > 25)\r\n      return this.setState({ message: \"Deck name is too long\" });\r\n\r\n    const jwt_token = localStorage.getItem(\"auth-token\");\r\n    const { deck, deckName } = this.state;\r\n    axios\r\n      .post(\r\n        \"api/createdeck\",\r\n        { deckName, deck },\r\n        {\r\n          headers: { \"auth-token\": jwt_token },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        return this.setState({\r\n          message: response.data,\r\n          CreateDeckModal: false,\r\n          deck: [],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (err) return this.setState({ message: err.response.data });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { deck, message, AddCardModal, CreateDeckModal } = this.state;\r\n    return (\r\n      <div className=\"deck-creator\">\r\n        <div\r\n          className=\"card-counter\"\r\n          onClick={() => {\r\n            if (deck.length > 0) return this.toggleAddCardModal();\r\n          }}\r\n        >\r\n          {deck.length}\r\n        </div>\r\n        <div className=\"form\">\r\n          <form>\r\n            <label>\r\n              Question\r\n              <input\r\n                id=\"question\"\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  this.handleCardOps(e, \"question\");\r\n                }}\r\n              ></input>\r\n            </label>\r\n\r\n            <label>\r\n              Answer\r\n              <input\r\n                id=\"answer\"\r\n                onChange={(e) => {\r\n                  this.handleCardOps(e, \"answer\");\r\n                }}\r\n                type=\"text\"\r\n              ></input>\r\n            </label>\r\n            <div>\r\n              <button style={{ margin: \"1rem\" }} onClick={this.addCard}>\r\n                Add Card\r\n              </button>\r\n              <button\r\n                style={{ margin: \"1rem\" }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  this.toggleCreateDeckModal();\r\n                }}\r\n              >\r\n                Create Deck\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {message && (\r\n          <p style={{ textAlign: \"center\", padding: \"1rem\" }}>{message}</p>\r\n        )}\r\n\r\n        <Modal isOpen={AddCardModal} toggle={this.toggleAddCardModal}>\r\n          {deck.map((val, i) => {\r\n            return (\r\n              <CardRow\r\n                card={val}\r\n                index={i}\r\n                deleteCard={this.deleteCard}\r\n              ></CardRow>\r\n            );\r\n          })}\r\n        </Modal>\r\n        <Modal isOpen={CreateDeckModal} toggle={this.toggleCreateDeckModal}>\r\n          <form>\r\n            <label>\r\n              Deck Name:\r\n              <br />\r\n              <input\r\n                type=\"text\"\r\n                style={{ marginTop: \"1rem\" }}\r\n                onChange={(e) => {\r\n                  this.setState({ deckName: e.target.value });\r\n                }}\r\n                placeholder=\"Maximum 25 characters\"\r\n              ></input>\r\n            </label>\r\n          </form>\r\n          <button\r\n            style={{\r\n              marginTop: \"1rem\",\r\n            }}\r\n            onClick={this.createDeck}\r\n          >\r\n            Create Deck\r\n          </button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeckCreator;\r\n","import React, {Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport LoginForm from \"./components/LoginForm\";\nimport SignupForm from \"./components/SignupForm\";\nimport Home from \"./components/Home\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport DeckCreator from \"./components/DeckCreator\";\n\nclass App extends Component {\n  jwt;\n  state = {\n    isDark: false,\n    isLoggedIn: false,\n  };\n\n  toggleTheme = () => {\n    localStorage.setItem(\"theme\", JSON.stringify(!this.state.isDark));\n    this.setState({ isDark: !this.state.isDark });\n  };\n\n  toggleLoggedIn = (bool) => {\n    this.setState({ isLoggedIn: bool });\n  };\n\n  componentWillMount = () => {\n    const theme = localStorage.getItem(\"theme\");\n    if (theme) this.setState({ isDark: JSON.parse(theme) });\n    this.jwt = localStorage.getItem(\"auth-token\");\n    if (this.jwt) return this.toggleLoggedIn(true);\n    return this.toggleLoggedIn(false);\n  };\n\n  render() {\n    const { isDark, isLoggedIn } = this.state;\n\n    return (\n      <Router>\n        <div className={`App ${isDark ? \"dark\" : \"light\"} `}>\n          <Navbar\n            toggleTheme={this.toggleTheme}\n            isLoggedIn={isLoggedIn}\n            toggleLoggedIn={this.toggleLoggedIn}\n          />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home\n                isLoggedIn={isLoggedIn}\n              />\n            </Route>\n\n            <ProtectedRoute accessible={!isLoggedIn} path=\"/signup\">\n              <SignupForm />\n            </ProtectedRoute>\n            <ProtectedRoute accessible={!isLoggedIn} path=\"/login\">\n              <LoginForm />\n            </ProtectedRoute>\n\n            <ProtectedRoute path=\"/createdeck\" accessible={isLoggedIn}>\n              <DeckCreator />\n            </ProtectedRoute>\n\n            <Route render={() => <Redirect to={{ pathname: \"/\" }} />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}